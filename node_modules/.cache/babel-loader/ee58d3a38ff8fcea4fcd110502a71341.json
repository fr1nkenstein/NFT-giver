{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/vishalv/Desktop/projects/app-test/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { Magic } from \"magic-sdk\";\nimport { ConnectExtension } from \"@magic-ext/connect\";\nimport Web3 from \"web3\";\nimport './styles/globals.css';\nimport HexEventRegistration from \"../../contracts/ethereum/HexEventRegistration.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar customNodeOptions = {\n  rpcUrl: 'https://rpc-mumbai.maticvigil.com/\"',\n  // Polygon RPC URL\n  chainId: 80001 // Polygon chain id\n\n}; // Setting network to Polygon - Testnet\n// const magic = new Magic('pk_live_04567F8F48C77DB6', { network: customNodeOptions });\n\nvar magic = new Magic(\"pk_live_73AAE8A5F81B1CF3\", {\n  network: \"rinkeby\",\n  // network: customNodeOptions,\n  locale: \"en_US\",\n  extensions: [new ConnectExtension()]\n});\nvar web3 = new Web3(magic.rpcProvider);\nexport default function App() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1]; // const sendTransaction = async () => {\n  //   const publicAddress = (await web3.eth.getAccounts())[0];\n  //   console.log(\"address\" + msg.sender);\n  //   const txnParams = {\n  //     from: publicAddress,\n  //     to: publicAddress,\n  //     value: web3.utils.toWei(\"0.01\", \"ether\"),\n  //     gasPrice: web3.utils.toWei(\"30\", \"gwei\")\n  //   };\n  //   web3.eth\n  //     .sendTransaction(txnParams)\n  //     .on(\"transactionHash\", (hash) => {\n  //       console.log(\"the txn hash that was returned to the sdk:\", hash);\n  //     })\n  //     .then((receipt) => {\n  //       console.log(\"the txn receipt that was returned to the sdk:\", receipt);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n\n  var login = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              web3.eth.getAccounts().then(function (accounts) {\n                setAccount(accounts === null || accounts === void 0 ? void 0 : accounts[0]);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const signMessage = async () => {\n  //   const publicAddress = (await web3.eth.getAccounts())[0];\n  //   const signedMessage = await web3.eth.personal\n  //     .sign(\"My Message\", publicAddress, \"\")\n  //     .catch((e) => console.log(e));\n  //   console.log(signedMessage);\n  // };\n  // const showWallet = () => {\n  //   magic.connect.showWallet().catch((e) => {\n  //     console.log(e);\n  //   });\n  // };\n\n\n  var createNft = function createNft() {\n    magic.connect.showWallet().catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  function eventRegstrationWA() {\n    return _eventRegstrationWA.apply(this, arguments);\n  } // const disconnect = async () => {\n  //   await magic.connect.disconnect().catch((e) => {\n  //     console.log(e);\n  //   });\n  //   setAccount(null);\n  // };\n\n\n  function _eventRegstrationWA() {\n    _eventRegstrationWA = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var web3Modal, provider, web3, HexEventRegistrationContractAddress, HexEventRegistrationContract;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3Modal = new Web3Modal();\n              _context2.next = 3;\n              return web3Modal.connect();\n\n            case 3:\n              provider = _context2.sent;\n              web3 = new Web3(provider); // const networkId = await web3.eth.net.getId()\n\n              HexEventRegistrationContractAddress = \"0xaae23273cafe659c79ac32076338a38216f57e73\";\n              HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress); // const accounts = await web3.eth.getAccounts()\n              // const { gmail, name, organisation, designation } = formInput\n              // const url = await uploadToIPFS()\n\n              HexEventRegistrationContract.methods.createHexRegTokenWithAccount(url, \"\", \"\", \"\", \"\").send({\n                from: accounts[0]\n              }).on('receipt', function () {\n                console.log('listed');\n                router.push('/');\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _eventRegstrationWA.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Magic Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), !account && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      className: \"button-row\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), account && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col pb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-10 right-10 absolute font-bold text-1xl\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Registrations = \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr-4 text-teal-400 font-bold text-4xl \",\n                children: \"count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Gmail\",\n            className: \"mt-2 border rounded p-4\" // onChange={e => updateFormInput({ ...formInput, gmail: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter Name\",\n            className: \"mt-2 border rounded p-4\" // onChange={e => updateFormInput({ ...formInput, name: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Organisation\",\n            className: \"mt-2 border rounded p-4\" // onChange={e => updateFormInput({ ...formInput, organisation: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Designaation\",\n            className: \"mt-2 border rounded p-4\" // onChange={e => updateFormInput({ ...formInput, designation: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: eventRegstrationWA,\n        className: \"button-row\",\n        children: \"Create Nft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v+GsaBOyRPoPwJh7mxQ3zpEGSB8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Magic","ConnectExtension","Web3","HexEventRegistration","customNodeOptions","rpcUrl","chainId","magic","network","locale","extensions","web3","rpcProvider","App","account","setAccount","login","eth","getAccounts","then","accounts","catch","error","console","log","createNft","connect","showWallet","e","eventRegstrationWA","web3Modal","Web3Modal","provider","HexEventRegistrationContractAddress","HexEventRegistrationContract","Contract","abi","methods","createHexRegTokenWithAccount","url","send","from","on","router","push"],"sources":["/home/vishalv/Desktop/projects/app-test/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nimport { Magic } from \"magic-sdk\";\nimport { ConnectExtension } from \"@magic-ext/connect\";\nimport Web3 from \"web3\";\nimport './styles/globals.css'\nimport HexEventRegistration from \"../../contracts/ethereum/HexEventRegistration.json\";\n\n\nconst customNodeOptions = {\n  rpcUrl: 'https://rpc-mumbai.maticvigil.com/\"', // Polygon RPC URL\n  chainId: 80001, // Polygon chain id\n}\n\n// Setting network to Polygon - Testnet\n// const magic = new Magic('pk_live_04567F8F48C77DB6', { network: customNodeOptions });\nconst magic = new Magic(\"pk_live_73AAE8A5F81B1CF3\", {\n  network: \"rinkeby\",\n  // network: customNodeOptions,\n  locale: \"en_US\",\n  extensions: [new ConnectExtension()]\n});\nconst web3 = new Web3(magic.rpcProvider);\n\nexport default function App() {\n  const [account, setAccount] = useState(null);\n\n  // const sendTransaction = async () => {\n  //   const publicAddress = (await web3.eth.getAccounts())[0];\n  //   console.log(\"address\" + msg.sender);\n  //   const txnParams = {\n  //     from: publicAddress,\n  //     to: publicAddress,\n  //     value: web3.utils.toWei(\"0.01\", \"ether\"),\n  //     gasPrice: web3.utils.toWei(\"30\", \"gwei\")\n  //   };\n  //   web3.eth\n  //     .sendTransaction(txnParams)\n  //     .on(\"transactionHash\", (hash) => {\n  //       console.log(\"the txn hash that was returned to the sdk:\", hash);\n  //     })\n  //     .then((receipt) => {\n  //       console.log(\"the txn receipt that was returned to the sdk:\", receipt);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  const login = async () => {\n    web3.eth\n      .getAccounts()\n      .then((accounts) => {\n        setAccount(accounts?.[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // const signMessage = async () => {\n  //   const publicAddress = (await web3.eth.getAccounts())[0];\n  //   const signedMessage = await web3.eth.personal\n  //     .sign(\"My Message\", publicAddress, \"\")\n  //     .catch((e) => console.log(e));\n  //   console.log(signedMessage);\n  // };\n\n  // const showWallet = () => {\n  //   magic.connect.showWallet().catch((e) => {\n  //     console.log(e);\n  //   });\n  // };\n\n  const createNft = () => {\n    magic.connect.showWallet().catch((e) => {\n      console.log(e);\n    });\n  };\n\n\n  async function eventRegstrationWA(){\n    const web3Modal = new Web3Modal()\n    const provider = await web3Modal.connect()\n    const web3 = new Web3(provider)\n    // const networkId = await web3.eth.net.getId()\n    const HexEventRegistrationContractAddress = \"0xaae23273cafe659c79ac32076338a38216f57e73\";\n    const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress)\n    // const accounts = await web3.eth.getAccounts()\n    // const { gmail, name, organisation, designation } = formInput\n    // const url = await uploadToIPFS()\n    HexEventRegistrationContract.methods.createHexRegTokenWithAccount(url, \"\",\"\",\"\",\"\")\n    .send({ from: accounts[0]}).on('receipt', function () {\n        console.log('listed');\n        router.push('/');\n    });\n  }\n\n  // const disconnect = async () => {\n  //   await magic.connect.disconnect().catch((e) => {\n  //     console.log(e);\n  //   });\n  //   setAccount(null);\n  // };\n\n  return (\n    <div className=\"app\">\n      <h2>Magic Connect</h2>\n      {!account && (\n        <button onClick={login} className=\"button-row\">\n          Sign In\n        </button>\n      )}\n\n      {account && (\n        <>\n          <div className=\"flex justify-center\">\n      \n            <div className=\"w-1/2 flex flex-col pb-12\">\n              {/* <button onClick={eventRegstrationCount} className=\"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\">\n                No Of Resistrations\n              </button> */}\n              <div className=\"top-10 right-10 absolute font-bold text-1xl\">\n                    <h1>Registrations = <button  className=\"mr-4 text-teal-400 font-bold text-4xl \">count</button></h1>\n              </div>\n              {/* {\n                fileUrl && (\n                  <img className=\"rounded mt-4\" width=\"350\" src={fileUrl} />\n                )\n              } */}\n              <input \n                placeholder=\"Enter Gmail\"\n                className=\"mt-2 border rounded p-4\"\n                // onChange={e => updateFormInput({ ...formInput, gmail: e.target.value })}\n              />\n              <textarea\n                placeholder=\"Enter Name\"\n                className=\"mt-2 border rounded p-4\"\n                // onChange={e => updateFormInput({ ...formInput, name: e.target.value })}\n              />\n              <input\n                placeholder=\"Organisation\"\n                className=\"mt-2 border rounded p-4\"\n                // onChange={e => updateFormInput({ ...formInput, organisation: e.target.value })}\n              />\n              <input\n                placeholder=\"Designaation\"\n                className=\"mt-2 border rounded p-4\"\n                // onChange={e => updateFormInput({ ...formInput, designation: e.target.value })}\n              />\n              {/* <button onClick={eventRegstrationWA} className=\"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\">\n                Registor Using Metamask\n              </button> */}\n              <button  className=\"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\">\n                Register\n              </button>\n            </div>\n          </div>\n          {/* <button onClick={showWallet} className=\"button-row\">\n            Show Wallet\n          </button>\n          <button onClick={sendTransaction} className=\"button-row\">\n            Send Transaction\n          </button>\n          <button onClick={signMessage} className=\"button-row\">\n            Sign Message\n          </button> */}\n          <button onClick={eventRegstrationWA} className=\"button-row\">\n            Create Nft\n          </button>\n          {/* <button onClick={disconnect} className=\"button-row\">\n            Disconnect\n          </button> */}\n        </>\n\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
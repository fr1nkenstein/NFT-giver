{"ast":null,"code":"import _objectSpread from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/vishalv/Desktop/projects/app-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/vishalv/Desktop/projects/app-test/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { Magic } from \"magic-sdk\";\nimport { ConnectExtension } from \"@magic-ext/connect\";\nimport Web3 from \"web3\";\nimport Web3Modal from 'web3modal'; //import { create as ipfsHttpClient } from 'ipfs-http-client'\n\nimport { useRouter } from 'next/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar magic = new Magic(\"pk_live_73AAE8A5F81B1CF3\", {\n  network: \"rinkeby\",\n  locale: \"en_US\",\n  extensions: [new ConnectExtension()]\n});\nvar web3 = new Web3(magic.rpcProvider);\nexport default function App() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fileUrl = _useState4[0],\n      setFileUrl = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      regCount = _useState6[0],\n      setRegCount = _useState6[1];\n\n  var _useState7 = useState({\n    gmail: '',\n    name: '',\n    organisation: '',\n    designation: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      formInput = _useState8[0],\n      updateFormInput = _useState8[1];\n\n  var router = useRouter();\n\n  function uploadToIPFS() {\n    return _uploadToIPFS.apply(this, arguments);\n  }\n\n  function _uploadToIPFS() {\n    _uploadToIPFS = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var gmail, name, organisation, designation, data;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              gmail = formInput.gmail, name = formInput.name, organisation = formInput.organisation, designation = formInput.designation;\n\n              if (!(!gmail || !name || !organisation || !designation)) {\n                _context5.next = 5;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 5:\n              // first, upload metadata to IPFS\n              data = JSON.stringify({\n                gmail: gmail,\n                name: name,\n                organisation: organisation,\n                designation: designation\n              });\n              _context5.prev = 6;\n              // const resFile = await axios({\n              //     method: \"post\",\n              //     url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n              //     data: data,\n              //     headers:{\n              //         'pinata_api_key':PINATA_KEY,\n              //         'pinata_secret_api_key':PINATA_SECRET,\n              //         'Content-Type':'multipart/form-data'\n              //     },\n              // });\n              //const url = `https://gateway.pinata.cloud/ipfs/${resFile.data.IpfsHash}`;\n              //alert(\"url onChange \"+ url);\n              //const ImageURL = `https://gateway.pinata.cloud/ipfs/${resFile.data.IpfsHash}`;\n              setFileUrl(\"https://gateway.pinata.cloud/ipfs/QmWyUTERPpKzY7tzA2iDzfzktNG8PSjj9PXZYU4Hx2jFB4\");\n              return _context5.abrupt(\"return\", fileUrl);\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](6);\n              console.log('Error uploading file: ', _context5.t0);\n              alert(\"Failure in uploadToIPFS -\" + _context5.t0);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[6, 11]]);\n    }));\n    return _uploadToIPFS.apply(this, arguments);\n  }\n\n  function eventRegstration() {\n    return _eventRegstration.apply(this, arguments);\n  }\n\n  function _eventRegstration() {\n    _eventRegstration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var web3Modal, provider, web3, networkId, gmail, name, organisation, designation, HexEventRegistrationContractAddress, HexEventRegistrationContract, accounts;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              web3Modal = new Web3Modal(); //console.log(\"line 99  : \" + web3Modal);\n\n              _context6.next = 3;\n              return web3Modal.connect();\n\n            case 3:\n              provider = _context6.sent;\n              web3 = new Web3(provider); //const url = await uploadToIPFS()\n\n              _context6.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context6.sent;\n              // console.log(\"line 104  : \" + networkId);\n              gmail = formInput.gmail, name = formInput.name, organisation = formInput.organisation, designation = formInput.designation; // console.log(\"line 106  : \" + gmail + \" \" + name);\n              // Mint the NFT\n\n              HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address; // console.log(\"line 109  : \" + HexEventRegistrationContractAddress);\n\n              HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress); //const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, '0x80731b8989B7A2339054EaBF2Ffe50024A8b5497');\n              // console.log(\"line 111  : \" + HexEventRegistrationContract);\n\n              _context6.next = 13;\n              return web3.eth.getAccounts();\n\n            case 13:\n              accounts = _context6.sent;\n              return _context6.abrupt(\"return\", HexEventRegistrationContract);\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _eventRegstration.apply(this, arguments);\n  }\n\n  function eventRegstrationWA() {\n    return _eventRegstrationWA.apply(this, arguments);\n  }\n\n  function _eventRegstrationWA() {\n    _eventRegstrationWA = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var web3Modal, provider, web3, networkId, HexEventRegistrationContractAddress, HexEventRegistrationContract, accounts, gmail, name, organisation, designation, url;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              web3Modal = new Web3Modal();\n              _context7.next = 3;\n              return web3Modal.connect();\n\n            case 3:\n              provider = _context7.sent;\n              web3 = new Web3(provider);\n              _context7.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context7.sent;\n              HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address;\n              HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress);\n              _context7.next = 12;\n              return web3.eth.getAccounts();\n\n            case 12:\n              accounts = _context7.sent;\n              gmail = formInput.gmail, name = formInput.name, organisation = formInput.organisation, designation = formInput.designation;\n              _context7.next = 16;\n              return uploadToIPFS();\n\n            case 16:\n              url = _context7.sent;\n              HexEventRegistrationContract.methods.createHexRegTokenWithAccount(url, gmail, name, organisation, designation).send({\n                from: accounts[0]\n              }).on('receipt', function () {\n                console.log('listed');\n                router.push('/');\n              });\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _eventRegstrationWA.apply(this, arguments);\n  }\n\n  function eventRegstrationWNA() {\n    return _eventRegstrationWNA.apply(this, arguments);\n  }\n\n  function _eventRegstrationWNA() {\n    _eventRegstrationWNA = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var web3Modal, provider, web3, networkId, HexEventRegistrationContractAddress, HexEventRegistrationContract, gmail, name, organisation, designation, url;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              web3Modal = new Web3Modal();\n              _context8.next = 3;\n              return web3Modal.connect();\n\n            case 3:\n              provider = _context8.sent;\n              web3 = new Web3(provider);\n              _context8.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context8.sent;\n              HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address;\n              HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress); //const accounts = await web3.eth.getAccounts()\n\n              gmail = formInput.gmail, name = formInput.name, organisation = formInput.organisation, designation = formInput.designation;\n              _context8.next = 13;\n              return uploadToIPFS();\n\n            case 13:\n              url = _context8.sent;\n              HexEventRegistrationContract.methods.createHexRegTokenWithoutAccount(url, gmail, name, organisation, designation).send({\n                from: 0xca891C5AFAb66BB9Fb9AFA1840443477Bc81bd88\n              }).on('receipt', function () {\n                console.log('listed');\n                router.push('/');\n              });\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _eventRegstrationWNA.apply(this, arguments);\n  }\n\n  var sendTransaction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var publicAddress, txnParams;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              publicAddress = _context.sent[0];\n              console.log(\"address\" + publicAddress);\n              txnParams = {\n                from: publicAddress,\n                to: publicAddress,\n                value: web3.utils.toWei(\"0.01\", \"ether\"),\n                gasPrice: web3.utils.toWei(\"30\", \"gwei\")\n              };\n              web3.eth.sendTransaction(txnParams).on(\"transactionHash\", function (hash) {\n                console.log(\"the txn hash that was returned to the sdk:\", hash);\n              }).then(function (receipt) {\n                console.log(\"the txn receipt that was returned to the sdk:\", receipt);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendTransaction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var login = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3.eth.getAccounts().then(function (accounts) {\n                setAccount(accounts === null || accounts === void 0 ? void 0 : accounts[0]);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function login() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signMessage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var publicAddress, signedMessage;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              publicAddress = _context3.sent[0];\n              _context3.next = 5;\n              return web3.eth.personal.sign(\"My Message\", publicAddress, \"\").catch(function (e) {\n                return console.log(e);\n              });\n\n            case 5:\n              signedMessage = _context3.sent;\n              console.log(signedMessage);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function signMessage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var showWallet = function showWallet() {\n    magic.connect.showWallet().catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  var createNft = function createNft() {\n    magic.connect.showWallet().catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  var disconnect = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return magic.connect.disconnect().catch(function (e) {\n                console.log(e);\n              });\n\n            case 2:\n              setAccount(null);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function disconnect() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Magic Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), !account && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      className: \"button-row\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), account && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col pb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-10 right-10 absolute font-bold text-1xl\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Registrations = \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mr-4 text-teal-400 font-bold text-4xl \",\n                children: regCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }, this), fileUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"rounded mt-4\",\n            width: \"350\",\n            src: fileUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Gmail\",\n            className: \"mt-2 border rounded p-4\",\n            onChange: function onChange(e) {\n              return updateFormInput(_objectSpread(_objectSpread({}, formInput), {}, {\n                gmail: e.target.value\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter Name\",\n            className: \"mt-2 border rounded p-4\",\n            onChange: function onChange(e) {\n              return updateFormInput(_objectSpread(_objectSpread({}, formInput), {}, {\n                name: e.target.value\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Organisation\",\n            className: \"mt-2 border rounded p-4\",\n            onChange: function onChange(e) {\n              return updateFormInput(_objectSpread(_objectSpread({}, formInput), {}, {\n                organisation: e.target.value\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Designaation\",\n            className: \"mt-2 border rounded p-4\",\n            onChange: function onChange(e) {\n              return updateFormInput(_objectSpread(_objectSpread({}, formInput), {}, {\n                designation: e.target.value\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: eventRegstrationWNA,\n            className: \"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\",\n            children: \"Registor Without Metamask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f4bBcX0JbnxpIeBolA7NTXboJTc=\", false, function () {\n  return [useRouter];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Magic","ConnectExtension","Web3","Web3Modal","useRouter","magic","network","locale","extensions","web3","rpcProvider","App","account","setAccount","fileUrl","setFileUrl","regCount","setRegCount","gmail","name","organisation","designation","formInput","updateFormInput","router","uploadToIPFS","data","JSON","stringify","console","log","alert","eventRegstration","web3Modal","connect","provider","eth","net","getId","networkId","HexEventRegistrationContractAddress","HexEventRegistration","networks","address","HexEventRegistrationContract","Contract","abi","getAccounts","accounts","eventRegstrationWA","url","methods","createHexRegTokenWithAccount","send","from","on","push","eventRegstrationWNA","createHexRegTokenWithoutAccount","sendTransaction","publicAddress","txnParams","to","value","utils","toWei","gasPrice","hash","then","receipt","catch","error","login","signMessage","personal","sign","e","signedMessage","showWallet","createNft","disconnect","target"],"sources":["/home/vishalv/Desktop/projects/app-test/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nimport { Magic } from \"magic-sdk\";\nimport { ConnectExtension } from \"@magic-ext/connect\";\nimport Web3 from \"web3\";\nimport Web3Modal from 'web3modal'\n//import { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { useRouter } from 'next/router'\n\nconst magic = new Magic(\"pk_live_73AAE8A5F81B1CF3\", {\n  network: \"rinkeby\",\n  locale: \"en_US\",\n  extensions: [new ConnectExtension()]\n});\nconst web3 = new Web3(magic.rpcProvider);\n\nexport default function App() {\n  const [account, setAccount] = useState(null);\n  const [fileUrl, setFileUrl] = useState(null)\n  const [regCount, setRegCount] = useState(0)\n  const [formInput, updateFormInput] = useState({ gmail: '', name: '', organisation: '' , designation: '' })\n  const router = useRouter()\n\n\n\n\n\n   async function uploadToIPFS() {\n    const { gmail, name, organisation, designation } = formInput\n    if (!gmail || !name || !organisation || !designation ) {\n      return\n    } else {\n      // first, upload metadata to IPFS\n      const data = JSON.stringify({\n        gmail, name, organisation, designation\n      }) \n      try{\n                    // const resFile = await axios({\n                    //     method: \"post\",\n                    //     url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n                    //     data: data,\n                    //     headers:{\n                    //         'pinata_api_key':PINATA_KEY,\n                    //         'pinata_secret_api_key':PINATA_SECRET,\n                    //         'Content-Type':'multipart/form-data'\n                    //     },\n                    // });\n                    //const url = `https://gateway.pinata.cloud/ipfs/${resFile.data.IpfsHash}`;\n                    //alert(\"url onChange \"+ url);\n                    //const ImageURL = `https://gateway.pinata.cloud/ipfs/${resFile.data.IpfsHash}`;\n                    setFileUrl(\"https://gateway.pinata.cloud/ipfs/QmWyUTERPpKzY7tzA2iDzfzktNG8PSjj9PXZYU4Hx2jFB4\");\n                    return fileUrl;\n            } //end of try\n        catch (error) {\n        console.log('Error uploading file: ', error)\n        alert(\"Failure in uploadToIPFS -\" + error)\n      } \n    }\n  }\n\n  async function eventRegstration() {\n    const web3Modal = new Web3Modal()\n    //console.log(\"line 99  : \" + web3Modal);\n    const provider = await web3Modal.connect()\n    const web3 = new Web3(provider)\n    //const url = await uploadToIPFS()\n    const networkId = await web3.eth.net.getId()\n    // console.log(\"line 104  : \" + networkId);\n    const { gmail, name, organisation, designation } = formInput\n    // console.log(\"line 106  : \" + gmail + \" \" + name);\n    // Mint the NFT\n    const HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address;\n    // console.log(\"line 109  : \" + HexEventRegistrationContractAddress);\n    const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress)\n    //const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, '0x80731b8989B7A2339054EaBF2Ffe50024A8b5497');\n    // console.log(\"line 111  : \" + HexEventRegistrationContract);\n    const accounts = await web3.eth.getAccounts()\n    return HexEventRegistrationContract;\n    // console.log(\"line 113  : \" + accounts[0]);\n    //const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistration.networks[networkId].address)\n    //let listingFee = await HexEventRegistrationContract.methods.getListingFee().call()\n    //listingFee = listingFee.toString()\n    //alert(\"url line 69 - \" + url)\n    //alert(\"account used for listing \" + accounts[0])\n    // HexEventRegistration.methods.mint(url).send({ from: accounts[0] }).on('receipt', function (receipt) {\n    //     console.log('minted');\n    //     //List the NFT\n    //     const tokenId = receipt.events.NFTMinted.returnValues[0];\n    //     HexEventRegistrationContract.methods.createHexRegToken(tokenId, gmail,name,organisation, designation)\n    //     .send({ from: accounts[0]}).on('receipt', function () {\n    //             console.log('listed');\n    //             router.push('/');\n    //         });\n    // });\n      // HexEventRegistrationContract.methods.createHexRegTokenWithAccount(url, gmail,name,organisation, designation)\n      // .send({ from: accounts[0]}).on('receipt', function () {\n      //     console.log('listed');\n      //     router.push('/');\n      // });\n      // HexEventRegistrationContract.methods.createHexRegTokenWithoutAccount(url, gmail,name,organisation, designation).send({ from: \"0xca891C5AFAb66BB9Fb9AFA1840443477Bc81bd88\"}).on('receipt', function () {\n      //     console.log('listed');\n      //     router.push('/');\n      // });\n    \n    \n    // HexEventRegistrationContract.methods.getParticipentsCount().call().then(function(e){\n    //   setRegCount(e)\n    // })\n    // setTimeout(() => {\n    //   HexEventRegistrationContract.methods.getParticipentsCount().call().then(function(e){\n    //     setRegCount(e);\n    //     // window.location.reload(1);\n    //   })\n    // }, \"3000\")\n    \n    \n  }\n\n  async function eventRegstrationWA(){\n    const web3Modal = new Web3Modal()\n    const provider = await web3Modal.connect()\n    const web3 = new Web3(provider)\n    const networkId = await web3.eth.net.getId()\n    const HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address;\n    const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress)\n    const accounts = await web3.eth.getAccounts()\n    const { gmail, name, organisation, designation } = formInput\n    const url = await uploadToIPFS()\n    HexEventRegistrationContract.methods.createHexRegTokenWithAccount(url, gmail,name,organisation, designation)\n    .send({ from: accounts[0]}).on('receipt', function () {\n        console.log('listed');\n        router.push('/');\n    });\n  }\n  async function eventRegstrationWNA(){\n    const web3Modal = new Web3Modal()\n    const provider = await web3Modal.connect()\n    const web3 = new Web3(provider)\n    const networkId = await web3.eth.net.getId()\n    const HexEventRegistrationContractAddress = HexEventRegistration.networks[networkId].address;\n    const HexEventRegistrationContract = new web3.eth.Contract(HexEventRegistration.abi, HexEventRegistrationContractAddress)\n    //const accounts = await web3.eth.getAccounts()\n    const { gmail, name, organisation, designation } = formInput\n    const url = await uploadToIPFS()\n    HexEventRegistrationContract.methods.createHexRegTokenWithoutAccount(url, gmail,name,organisation, designation)\n    .send({ from: 0xca891C5AFAb66BB9Fb9AFA1840443477Bc81bd88}).on('receipt', function () {\n        console.log('listed');\n        router.push('/');\n    });\n  }\n\n  const sendTransaction = async () => {\n    const publicAddress = (await web3.eth.getAccounts())[0];\n    console.log(\"address\" + publicAddress);\n    const txnParams = {\n      from: publicAddress,\n      to: publicAddress,\n      value: web3.utils.toWei(\"0.01\", \"ether\"),\n      gasPrice: web3.utils.toWei(\"30\", \"gwei\")\n    };\n    web3.eth\n      .sendTransaction(txnParams)\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"the txn hash that was returned to the sdk:\", hash);\n      })\n      .then((receipt) => {\n        console.log(\"the txn receipt that was returned to the sdk:\", receipt);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const login = async () => {\n    web3.eth\n      .getAccounts()\n      .then((accounts) => {\n        setAccount(accounts?.[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const signMessage = async () => {\n    const publicAddress = (await web3.eth.getAccounts())[0];\n    const signedMessage = await web3.eth.personal\n      .sign(\"My Message\", publicAddress, \"\")\n      .catch((e) => console.log(e));\n    console.log(signedMessage);\n  };\n\n  const showWallet = () => {\n    magic.connect.showWallet().catch((e) => {\n      console.log(e);\n    });\n  };\n\n  const createNft = () => {\n    magic.connect.showWallet().catch((e) => {\n      console.log(e);\n    });\n  };\n\n  const disconnect = async () => {\n    await magic.connect.disconnect().catch((e) => {\n      console.log(e);\n    });\n    setAccount(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <h2>Magic Connect</h2>\n      {!account && (\n        <button onClick={login} className=\"button-row\">\n          Sign In\n        </button>\n      )}\n\n      {account && (\n        <>\n          {/* <button onClick={showWallet} className=\"button-row\">\n            Show Wallet\n          </button>\n          <button onClick={sendTransaction} className=\"button-row\">\n            Send Transaction\n          </button>\n          <button onClick={signMessage} className=\"button-row\">\n            Sign Message\n          </button>\n          <button onClick={createNft} className=\"button-row\">\n            Create Nft\n          </button>\n          <button onClick={disconnect} className=\"button-row\">\n            Disconnect\n          </button> */}\n          <div className=\"flex justify-center\">\n      \n      <div className=\"w-1/2 flex flex-col pb-12\">\n        {/* <button onClick={eventRegstrationCount} className=\"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\">\n          No Of Resistrations\n        </button> */}\n        <div className=\"top-10 right-10 absolute font-bold text-1xl\">\n              <h1>Registrations = <button  className=\"mr-4 text-teal-400 font-bold text-4xl \">{regCount}</button></h1>\n        </div>\n        {\n          fileUrl && (\n            <img className=\"rounded mt-4\" width=\"350\" src={fileUrl} />\n          )\n        }\n        <input \n          placeholder=\"Enter Gmail\"\n          className=\"mt-2 border rounded p-4\"\n          onChange={e => updateFormInput({ ...formInput, gmail: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Enter Name\"\n          className=\"mt-2 border rounded p-4\"\n          onChange={e => updateFormInput({ ...formInput, name: e.target.value })}\n        />\n        <input\n          placeholder=\"Organisation\"\n          className=\"mt-2 border rounded p-4\"\n          onChange={e => updateFormInput({ ...formInput, organisation: e.target.value })}\n        />\n        <input\n          placeholder=\"Designaation\"\n          className=\"mt-2 border rounded p-4\"\n          onChange={e => updateFormInput({ ...formInput, designation: e.target.value })}\n        />\n        <button onClick={eventRegstrationWNA} className=\"font-bold mt-4 bg-teal-400 text-white rounded p-4 shadow-lg\">\n          Registor Without Metamask\n        </button>\n      </div>\n    </div>\n        </>\n\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}